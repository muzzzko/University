// Code generated by go-swagger; DO NOT EDIT.

package university

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "univers/pkg/models"
)

// GetUniversitiesOKCode is the HTTP code returned for type GetUniversitiesOK
const GetUniversitiesOKCode int = 200

/*GetUniversitiesOK список университетов

swagger:response getUniversitiesOK
*/
type GetUniversitiesOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetUniversitiesOKBody `json:"body,omitempty"`
}

// NewGetUniversitiesOK creates GetUniversitiesOK with default headers values
func NewGetUniversitiesOK() *GetUniversitiesOK {

	return &GetUniversitiesOK{}
}

// WithPayload adds the payload to the get universities o k response
func (o *GetUniversitiesOK) WithPayload(payload *models.GetUniversitiesOKBody) *GetUniversitiesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universities o k response
func (o *GetUniversitiesOK) SetPayload(payload *models.GetUniversitiesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniversitiesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUniversitiesUnprocessableEntityCode is the HTTP code returned for type GetUniversitiesUnprocessableEntity
const GetUniversitiesUnprocessableEntityCode int = 422

/*GetUniversitiesUnprocessableEntity неверный запрос

swagger:response getUniversitiesUnprocessableEntity
*/
type GetUniversitiesUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResult `json:"body,omitempty"`
}

// NewGetUniversitiesUnprocessableEntity creates GetUniversitiesUnprocessableEntity with default headers values
func NewGetUniversitiesUnprocessableEntity() *GetUniversitiesUnprocessableEntity {

	return &GetUniversitiesUnprocessableEntity{}
}

// WithPayload adds the payload to the get universities unprocessable entity response
func (o *GetUniversitiesUnprocessableEntity) WithPayload(payload *models.ErrorResult) *GetUniversitiesUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get universities unprocessable entity response
func (o *GetUniversitiesUnprocessableEntity) SetPayload(payload *models.ErrorResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUniversitiesUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
