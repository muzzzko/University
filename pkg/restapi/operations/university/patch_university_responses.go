// Code generated by go-swagger; DO NOT EDIT.

package university

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "univers/pkg/models"
)

// PatchUniversityOKCode is the HTTP code returned for type PatchUniversityOK
const PatchUniversityOKCode int = 200

/*PatchUniversityOK успешное обновление информации об университете

swagger:response patchUniversityOK
*/
type PatchUniversityOK struct {

	/*
	  In: Body
	*/
	Payload *models.University `json:"body,omitempty"`
}

// NewPatchUniversityOK creates PatchUniversityOK with default headers values
func NewPatchUniversityOK() *PatchUniversityOK {

	return &PatchUniversityOK{}
}

// WithPayload adds the payload to the patch university o k response
func (o *PatchUniversityOK) WithPayload(payload *models.University) *PatchUniversityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch university o k response
func (o *PatchUniversityOK) SetPayload(payload *models.University) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUniversityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchUniversityUnprocessableEntityCode is the HTTP code returned for type PatchUniversityUnprocessableEntity
const PatchUniversityUnprocessableEntityCode int = 422

/*PatchUniversityUnprocessableEntity ошибка обновления

swagger:response patchUniversityUnprocessableEntity
*/
type PatchUniversityUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResult `json:"body,omitempty"`
}

// NewPatchUniversityUnprocessableEntity creates PatchUniversityUnprocessableEntity with default headers values
func NewPatchUniversityUnprocessableEntity() *PatchUniversityUnprocessableEntity {

	return &PatchUniversityUnprocessableEntity{}
}

// WithPayload adds the payload to the patch university unprocessable entity response
func (o *PatchUniversityUnprocessableEntity) WithPayload(payload *models.ErrorResult) *PatchUniversityUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch university unprocessable entity response
func (o *PatchUniversityUnprocessableEntity) SetPayload(payload *models.ErrorResult) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchUniversityUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
